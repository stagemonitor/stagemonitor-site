en:
    section-features: Features
    section-documentation: Documentation

    stagemonitor-slogan: make your application perform like a star
    stagemonitor-description: an open source solution to application performance monitoring for java server applications

    button-github: View on GitHub
    button-get-started: Get Started
    button-more-info: More Info

    footer-socialize: socialize
    footer-contact-us: contact us
    footer-mailing-list: Mailing List

    fa-user-secret-headline: Turn on private mode for your data
    fa-user-secret-description: You can deploy stagemonitor on your own datacenter. Nothing will ever be sent to the outside world.

    fa-server-headline: Reliable
    fa-server-description: Stagemonitor is successfully used in production as well as development, providing valuable insights constantly whilst imposing very low overhead.

    fa-puzzle-piece-headline: Extendable
    fa-puzzle-piece-description: Write your own plugins, use 3rd party plugins, track your own metrics and create or customize dashboards.

    fa-bell-o-headline: Alerting
    fa-bell-o-description: Define thresholds for your metrics. Manage subscriptions and alerting channels.

    fa-sitemap-headline: Distributed Tracing
    fa-sitemap-description: Stagemonitor uses the <a href="http://opentracing.io/" target="_blank">Open Tracing</a> API in order to correlate requests in a distributed system.

    fa-refresh-headline: Brings Devs and Ops together
    fa-refresh-description: Stagemonitor is designed to be used in development, QA and production.


    in-browser-widget-name: In Browser Widget
    in-browser-widget-short_description: No backend required - easy to set up - perfect fit for development
    in-browser-widget-description: Stagemonitor widget is a little stagemonitor icon, which is automatically injected in the monitored
        webpage (if activated).
        It offers to view the methods that were invoked during the request and notifies based on configurable thresholds, if the request was
        too slow or too many SQL statements were executed. <br><br>
        The widget supports the developer through instant feedback about poorly performing parts of the application.

    metrics-name: Real Time Metrics
    metrics-description: The Metrics tab displays metrics collected by stagemonitor in tables and graphs in real time. It is lightweight and
     easy to use as it does not require you to install a database or other visualization tools.
    metrics-image_title: Widget Metrics Tab

    call_tree_view-name: Call Tree View
    call_tree_view-description: This tab displays the method call tree of the current request including SQL statements to identify
      the bottlenecks of a request. The method call tree is collected by stagemonitor's low overhead profiler.
    call_tree_view-image_title: Call Tree View

    request_trace-name: Request Trace
    request_trace-description: In this tab you can find detailed information about the request. This includes a breakdown of the
      page load time into network, server processing, DOM processing and page rendering time.<br><br>
      You can also see the execution time and count of database interactions.<br>
      Furthermore you can analyze the HTTP headers and find information about the device, browser and operating
      system the request was issued from.
    request_trace-image_title: Request Trace

    configuration_mgmt-name: Configuration Management done right
    configuration_mgmt-description: The stagemonitor widget includes a configuration tab in which you can reload and dynamically update
      stagemonitor's configuration and view the available configuration sources.<br><br>
      For each configuration option, you can view documentation, find out about the configuration source of the current
      value, see validation errors and save a new value to an arbitrary configuration source.
    configuration_mgmt-image_title: Configuration Management

    analyze-requests-name: Analyze Requests
    analyze-requests-short_description: analyze errors in production/web analytics
    analyze-requests-description: Stagemonitor includes a <a href="http://www.elasticsearch.org/overview/kibana/">Kibana</a>
      dashboard that can be used to get detailed information about incoming requests. You don't need to set up logstash or
      parse any logs for that.<br><br>
      You want to know what the most common source of errors is, what the series of requests that lead to an error
      looked like or why a request was slow? This dashboard will give you the answers.

    powerful_q_f-name: Powerful querying and filtering capabilities
    powerful_q_f-description: Filter requests by queries or by selecting charts. You could use the query section to get details
      about requests that caused errors or were slow.
    powerful_q_f-image_title: Filter Requests

    detailed_traces-name: Detailed Request Traces
    detailed_traces-description: In this section, you can find out about the root cause of slow or failed requests by analyzing
      stack traces of exceptions, request headers and parameters. The request details also include information about
      the user's login name, ip, browser and operating system. <br><br>
      You can even analyze the method call tree including sql statements and parameters to identify what
      caused a request to be slow. The method call tree is collected by stagemonitor's low overhead profiler.
    detailed_traces-image_title: Request Details

    grafana-dashboards-name: Cluster Monitoring
    grafana-dashboards-short_description: metrics of your whole cluster - perfect fit for operations
    grafana-dashboards-description: The stagemonitor monitoring agent tightly integrates with time series databases like Elasticsearch,
      Graphite and InfluxDB to store a long history of datapoints.
      Stagemonitor includes preconfigured Grafana dashboards that can be fully customized. <br><br>
      In order to monitor clustered environments thoroughly you are able to select data based on application, instance and host or aggregated visualisations.
      If you don't select a instance and a host, you get aggregated metrics.<br><br>
      Stagemonitor includes the awesome <a href="http://metrics.codahale.com/">Metrics</a> library. You can use it to
      <a href="https://github.com/stagemonitor/stagemonitor/wiki/Track-your-own-metrics">track additional metrics</a> -
      either programmatically or declaratively by adding annotations.

    request_db-name: Request Dashboard
    request_db-description: The request dashboard gives you information about the statistical distribution of your response
      times, the throughput and error rate.
      <br><br>
      Requests are grouped by use cases, in order to identify e.g. the use cases with the highest response times. Groupings are automatically detected if you are using popular frameworks like Spring MVC or JAX-RS. Other
      technologies are supported as well by manual configurations.
      <br><br>
      In addition to statistics for HTTP requests, you can analyse JDBC queries, AJAX requests, page load times and others.
    request_db-image_title: Request Dashboard

    jvm_db-name: JVM Dashboard
    jvm_db-description: Get information about the heap utilisation, garbage collection behaviour and CPU utilisation.
    image: /images/dashboard-memory.png
    jvm_db-image_title: JVM Memory Dashboard

    ehCache-name: EhCache Metrics
    ehCache-description: Information about the hit-rate, cache size (in bytes), get performance, throughput and expiries of
      all caches.
    ehCache-image_title: EhCache Dashboard

    server_metrics-name: Server Metrics
    server_metrics-description: In this dashboard, you can get information about the Server Thread Pool usage, the number of
      concurrent sessions, the load of your hosts and the number of running servers.
    server_metrics-image_title: Server Dashboard

    comunity-support-headline: Do you have any Questions
    comunity-support-label: Community Support
    comunity-support-description: The stagemonitor team provides community support, you can choose between different ways to contact us.

    github-headline: GitHub
    github-description: If you have a bug or an idea.

    mailing-list-headline: Mailinglist
    mailing-list-description: MailingGroup

    gitter-headline: Gitter
    gitter-description: Chat with us for fast support!

    commercial-support-label: Commercial Support
    commercial-support-description: We also provide professional support for the use of stagemonitor, please <a class="contact" href="mailto:felix.barnsteiner@isys.de">Contact us</a> for more information.

    individual-headline: Individual development

    expert-headline: Expert analysis

    phone-headline: Telephone and email support

    training-headline: Trainings and workshops

    customize-headline: Customizing

    installation-headline: Help with the installation
